unit UFraLogin;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.Objects,
  FMX.Layouts, FMX.StdCtrls, FMX.Controls.Presentation, FMX.Edit;

type
  Tfralogin = class(TForm)
    lytPrincipal: TLayout;
    lytBluMopLogo: TLayout;
    imgBlumopLogo: TImage;
    RectPrincipal: TRectangle;
    lblSaldo: TLabel;
    rectAutenticar: TRectangle;
    lytBotoes: TLayout;
    lytLogoOnibus: TLayout;
    imgOnibus: TImage;
    RectConsulta: TRectangle;
    EdtNumero: TEdit;
    Label1: TLabel;
    procedure rectAutenticarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  fralogin: Tfralogin;

implementation

{$R *.fmx}

uses
  UFraCatraca, UService.Cartao;

procedure Tfralogin.rectAutenticarClick(Sender: TObject);
var
  xNumero: String;
  xServico: TServiceCartao;
begin
    if EdtNumero.Text = EmptyStr then
      raise Exception.Create('Informe o numero do cartão');

    xNumero := EdtNumero.Text;
  try
      xServico := TServiceCartao.ObterInstancia;
      xServico.RegistrarLog('Cartao criado');
      xServico.ObterRegistro(xNumero);

    if not Assigned(fraCatraca) then
      fraCatraca := TfraCatraca.Create(application);

    fraCatraca.Show();
  except
    On E: exception do
      raise Exception.Create(E.Message);
  end;
end;

end.
